{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Whanos","text":"<p>The Whanos project aims at developing an automated pipeline to test, compile and deploy applications written in any languages!</p>"},{"location":"#prerequisites","title":"Prerequisites","text":"<p>Before you begin, ensure you have these packages installed in your machine: - Ansible - Git</p>"},{"location":"#getting-started","title":"Getting Started","text":""},{"location":"#deploy-the-pipeline","title":"Deploy the pipeline","text":"<p> Deploying the pipeline is done using Ansible and Git in two steps:</p> <ul> <li>To deploy Kubernetes, check out : Kubernetes deployment</li> <li>To deploy Jenkins and the Registry, check out : Jenkins deployment, Registry deployment</li> </ul>"},{"location":"#use-the-pipeline","title":"Use the pipeline","text":"<p> To use the pipeline, you must understand how to configure your repo and how to launch the Jenkins job:</p> <ul> <li>To start using your pipeline, check out: Jenkins usage</li> <li>To start deploying your apps and access them, check out: Kubernetes usage</li> </ul>"},{"location":"#creators","title":"Creators","text":"<p>Erwan Gonzales</p> <p>Clovis Rabot</p> <p>Th\u00e9o Liennard</p>"},{"location":"Jenkins/Jenkins%20deployment/","title":"Jenkins deployment","text":""},{"location":"Jenkins/Jenkins%20deployment/#deploy-your-jenkins-instance","title":"Deploy your Jenkins instance","text":"<p>To monitor, automate the building, testing, and deployment of your repositories, we use Jenkins. To deploy your Jenkins instance, you first have to gather the local IP of the machine you want to use as host.</p> <p>[!warning] You must have your Kubernetes cluster up and running before this step. To check if your Kubernetes cluster is installed properly, you can check if the file <code>admin.conf</code> is in <code>ansible/roles/kunernetes</code> in the repository. If not, check Kubernetes Deployment.</p> <p>Deploying Jenkins and the Docker Registry is done by running this script : <pre><code>./deploy_jenkins.sh [ip]\n</code></pre></p> <p>The technical documentation for Jenkins is at Jenkins technical.</p>"},{"location":"Jenkins/Jenkins%20technical/","title":"Jenkins Technical","text":""},{"location":"Jenkins/Jenkins%20technical/#deployment","title":"Deployment","text":"<p>Jenkins deployment is done using a Dockerfile.</p> <p>The produced image setups everything Jenkins needs to be operational.</p> <ul> <li>configuration using JCasC</li> <li>bash scripts for completing jobs</li> <li>whanos images dockerfiles</li> <li>admin account</li> </ul> <p>The deployment is issued by Ansible in the main process. But the Jenkins Image we build can be used standalone, given that you provide the necessary files for its creation.</p>"},{"location":"Jenkins/Jenkins%20usage/","title":"Jenkins usage","text":""},{"location":"Jenkins/Jenkins%20usage/#whanos-images","title":"Whanos Images","text":"<p>Jenkins is linked to a docker registry. When building the whanos base images (<code>whanos-&lt;language&gt;</code>), Jenkins will trigger a <code>docker build</code> command that will generate the base image for the selected languages and then push it into the registry.</p> <p>Supported languages are:</p> <ul> <li>C,</li> <li>JavaScript,</li> <li>Java,</li> <li>Python,</li> <li>Befunge,</li> </ul>"},{"location":"Jenkins/Jenkins%20usage/#link-project","title":"Link Project","text":"<p>Jenkins is able to track a given <code>git</code> project (e.g. hosted on Github).</p> <p>Under the listed jobs, select <code>link-project</code> and trigger it with arguments. Name the project you want to track and give Jenkins its URI.</p> <p>Now the project is tracked by Jenkins, it will be pulled every minute and check the latest available commit to detect changes.</p> <p>Upon changes the project will be built according to the presence of a Dockerfile in the root folder. If a Dockerfile is found, the project will be built using it. Else, Whanos will detect which language is the project based on and use one of the standalone images for this language.</p> <p>The resulting image will be hosted on the local Docker Registry used by Whanos.</p>"},{"location":"Jenkins/Jenkins%20usage/#deployment","title":"Deployment","text":"<p>You can make Jenkins deploy your application project on Kubernetes.</p> <p>In order to do it, you must provide at the root of your project a <code>whanos.yaml</code> file that contains the configuration for your deployment.</p> <p>After your image is built, Jenkins will search the root folder for the <code>whanos.yaml</code>. If it finds it, an order will be issued to deploy your application using the built image. Otherwise the pipeline is considered done and successful.</p>"},{"location":"Kubernetes/Kubernetes%20deployment/","title":"Kubernetes deployment","text":""},{"location":"Kubernetes/Kubernetes%20deployment/#deploy-your-kubernetes-nodes","title":"Deploy your Kubernetes nodes","text":"<p>For your applications to be deployed, we use Kubernetes. Firstly, you must gather the local IP of the machines you want to use as nodes for your cluster.</p> <p>To set up the Kubernetes cluster, you have to run this script : <pre><code>./deploy_kube.sh [ip docker registry] [ip1] [ip2] ...\n</code></pre> This step can take 30 minutes to 1h depending on the number of nodes</p> <p>[!warning] The number of nodes required for to use Whanos ranges from 2 to 6.</p> <p>The technical documentation for kubernetes is at Kubernetes technical.</p>"},{"location":"Kubernetes/Kubernetes%20technical/","title":"Kubernetes technical","text":""},{"location":"Kubernetes/Kubernetes%20technical/#introduction","title":"Introduction","text":"<p>In this part of the documentation, we will go through the working of Kubernetes in Whanos.</p>"},{"location":"Kubernetes/Kubernetes%20technical/#kubespray","title":"Kubespray","text":"<p>We use Kubespray to set up the nodes of the cluster. We have chosen this deployment method because it is a reliable, simple and effective way to self-host Kubernetes systems.</p> <p>If you want to know more about Kubespray check out their Documentation !</p>"},{"location":"Kubernetes/Kubernetes%20technical/#helm","title":"Helm","text":"<p>To deploy applications onto Kubernetes pods, we use Helm to template our yaml files. Helm is particularly useful because it can read the <code>wanos.yaml</code> files to adapt deployment specification and services in Kubernetes.</p> <p>You can also check out their Documentation !</p>"},{"location":"Kubernetes/Kubernetes%20usage/","title":"Kubernetes usage","text":""},{"location":"Kubernetes/Kubernetes%20usage/#deploy-your-apps","title":"Deploy your apps","text":"<p>For you to start deploying your apps, you have to set up your repo, so I can be properly understood and deploy by the pipeline.</p>"},{"location":"Kubernetes/Kubernetes%20usage/#whanosyaml","title":"Whanos.yaml","text":"<p>To do that, you have to create a <code>whanos.yaml</code> file at the root of your repository.</p> <p>The <code>whanos.yaml</code> file can contain a <code>deployment</code> root property, which itself can contain:</p> <ul> <li><code>replicas</code> \u2192 Number of replicas to have (default: 1; 2 replicas means that 2 instances of the resulting pod must be running at the same time in the cluster);</li> <li><code>resources</code> \u2192 Resource needs, corresponding to Kubernetes\u2019 own resource specifications (default: no specifications);</li> <li><code>ports</code> \u2192 An integer list of ports needed by the container to be forwarded to it (default: no ports forwarded).</li> </ul> <p>Here is an example of a <code>whanos.yaml</code> file <pre><code>deployment:\n    replicas: 3\n    resources:\n        limits:\n            memory: \"128M\"\n        requests:\n            memory: \"64M\"\n    ports:\n        - 3000\n</code></pre></p>"},{"location":"Registry/Registry%20deployment/","title":"Registry deployment","text":""},{"location":"Registry/Registry%20deployment/#deploy-your-docker-registry","title":"Deploy your Docker Registry","text":"<p>To store and manage the Docker images of your repository, we use a Docker Registry. To deploy your Registry, you first have to gather the local IP of the machine you want to use as host.</p> <p>[!warning] You must have your Kubernetes cluster up and running before this step. To check if your Kubernetes cluster is installed properly, you can check if the file <code>admin.conf</code> is in <code>ansible/roles/kunernetes</code> in the repository. If not, check Kubernetes Deployment.</p> <p>Deploying Jenkins and the Docker Registry is done by running this script : <pre><code>./deploy_jenkins.sh [ip]\n</code></pre></p> <p>The technical documentation for the Registry is at Registry technical.</p>"}]}